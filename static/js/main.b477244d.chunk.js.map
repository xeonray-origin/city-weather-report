{"version":3,"sources":["config.js","components/city.js","style/app.style.js","style/home.style.js","components/home.js","app.js","index.js"],"names":["cityArr","tableConfig","label","path","withRouter","props","data","setData","history","Card","CardHeader","title","subheader","Date","dt","CardContent","Table","map","config","TableRow","TableCell","get","CardActions","disableSpacing","Button","variant","onClick","push","createStyles","root","flexGrow","select","width","fontSize","marginLeft","marginRight","textJustify","link","color","cursor","withStyles","HomeStyle","classes","list","console","log","length","TableHead","TableBody","record","className","AppStyle","useState","city","setCity","setList","useEffect","fetch","api","then","res","json","catch","err","window","alert","message","Grid","container","spacing","item","xs","FormControl","Select","value","onChange","e","target","cityVal","MenuItem","exact","render","document","getElementById"],"mappings":"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","file":"static/js/main.b477244d.chunk.js","sourcesContent":["export const api = (city) =>\n  `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=5e8b3250f9cb806f54a976fe8b0aeacb`;\n\nexport const cityArr = [\"Delhi\", \"Mumbai\", \"Kolkata\", \"Bengaluru\"];\n\nexport const tableConfig = [\n  {\n    label: \"Time\",\n    path: \"dt_txt\",\n  },\n  {\n    label: \"Feels\",\n    path: \"main.feels_like\",\n  },\n  {\n    label: \"Ground Level\",\n    path: \"main.grnd_level\",\n  },\n  {\n    label: \"Humidity\",\n    path: \"main.humidity\",\n  },\n  {\n    label: \"Pressure\",\n    path: \"main.pressure\",\n  },\n  {\n    label: \"Sea Level\",\n    path: \"main.sea_level\",\n  },\n  {\n    label: \"Temp\",\n    path: \"main.temp\",\n  },\n];\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Table,\n  CardActions,\n  Button,\n  TableCell,\n  TableRow,\n} from \"@material-ui/core\";\nimport get from \"lodash/get\";\nimport { tableConfig } from \"./../config\";\nimport { withRouter } from \"react-router-dom\";\nfunction City(props) {\n  const { data, setData, history } = props;\n\n  const handleClick = () => {\n    setData(null);\n    history.push(\"/\");\n  };\n\n  return data ? (\n    <div>\n      <Card>\n        <CardHeader\n          title={\"Weather Report\"}\n          subheader={`Dated: ${new Date(data.dt)} `}\n        />\n        <CardContent>\n          <Table>\n            {tableConfig.map((config) => {\n              return (\n                <TableRow>\n                  <TableCell>{config.label}</TableCell>\n                  <TableCell>{get(data, config.path)}</TableCell>\n                </TableRow>\n              );\n            })}\n          </Table>\n        </CardContent>\n        <CardActions disableSpacing>\n          <Button variant=\"contained\" onClick={handleClick}>\n            Go Back\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  ) : (\n    \"loading...\"\n  );\n}\n\nexport default withRouter(City);\n","import { createStyles } from \"@material-ui/core/styles\";\n\nexport default createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  select: {\n    width: \"100%\",\n    fontSize: \"1.8rem\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    textJustify: \"center\",\n  },\n});\n","import { createStyles } from \"@material-ui/core/styles\";\n\nexport default createStyles({\n  link: {\n    color: \"blue\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { tableConfig } from \"./../config\";\nimport { HomeStyle } from \"./../style\";\nimport get from \"lodash/get\";\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction Home(props) {\n  const { classes, list, setData, history } = props;\n  console.log(list);\n\n  const handleHyperLink = (data) => {\n    setData(data);\n    history.push(\"/city\");\n  };\n\n  return list.length ? (\n    <div>\n      <Table>\n        <TableHead>\n          {tableConfig.map((config) => (\n            <TableCell>{config.label}</TableCell>\n          ))}\n        </TableHead>\n        <TableBody>\n          {list.map((record) => {\n            return (\n              <TableRow>\n                {tableConfig.map((config) => (\n                  <TableCell>\n                    {config.path === \"dt_txt\" ? (\n                      <span\n                        className={classes.link}\n                        onClick={() => handleHyperLink(record)}\n                      >\n                        {get(record, config.path)}\n                      </span>\n                    ) : (\n                      get(record, config.path)\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  ) : (\n    \"loading...\"\n  );\n}\n\nexport default withStyles(HomeStyle)(withRouter(Home));\n","import City from \"./components/city\";\nimport Home from \"./components/home\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { api, cityArr } from \"./config\";\nimport {\n  Select,\n  Grid,\n  MenuItem,\n  withStyles,\n  FormControl,\n} from \"@material-ui/core\";\nimport { AppStyle } from \"./style\";\n\nconst App = (props) => {\n  const { classes, history } = props;\n  const [city, setCity] = useState(\"Delhi\");\n  const [data, setData] = useState(null);\n  const [list, setList] = useState([]);\n\n  const handleChange = (e) => {\n    history.push(\"/\");\n    setCity(e.target.value);\n  };\n\n  useEffect(() => {\n    fetch(api(city))\n      .then((res) => res.json())\n      .then((res) => {\n        setList(res.list);\n      })\n      .catch((err) => {\n        window.alert(err.message);\n      });\n  }, [city]);\n\n  return (\n    <Grid className={classes.root} container spacing={3}>\n      <Grid item xs={12}>\n        <FormControl className={classes.select}>\n          <Select value={city} onChange={handleChange}>\n            {cityArr.map((cityVal) => (\n              <MenuItem value={cityVal}>{cityVal}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <Home {...props} city={city} list={list} setData={setData} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/city\"\n              render={(props) => (\n                <City {...props} data={data} setData={setData} />\n              )}\n            />\n          </Switch>\n        </>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(AppStyle)(withRouter(App));\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./app\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}